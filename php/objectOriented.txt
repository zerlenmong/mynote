面向对象
   -object 世间万物皆对象
   -oriented

对象的基本组成
  对象的组成元素：
     数据模型
     属性或者成员变量
  对象的行为
     行为模型

对象的特点
   独一无二
   特定事物
   可以重复使用

面向对象--实质
   属性
   方法
对象与对象之间通过方法的调用完成互动

面向对象的基本思路
  一、识别对象 
  二、识别对象的属性
  三、识别对象的行为
面向对象的基本原则 
  对象内部是高内聚的
  对象对外是低耦合的

基本实践
高级实践
特殊实践

对象的集合--类 class
 类的对象称为类的一个实例(Instance)
 类的属性和方法统称为类成员

面向对象的三种访问权限
   public
   protected
   private


数据访问
   parent关键字可以用于调用父类中被子类重写了的方法
   self关键字可以用于访问类自身的成员方法，也可以有于访问自身的静态成员和类常量；不能用于访问
类自身的属性；使用常量的时候不需要在常量名称前面添加$符号
   static关键字用于访问类自身定义的静态成员，防伪静态属性时需要在属性前面添加$符号。

面向对象的接口 interface
  接口就是把不同类的共同行为进行了定义，然后在不同的类里面实现不同的功能
   实现接口的类必须要实现接口的方法 
  implements
  可以用instanceof关键字来判断某个对象是否实现了某个接口


面向对象--多态
因为接口的方法实现可以有很多，所以对于接口里面的定义的方法的具体实现是多种多样的
这种特性我们称为多态

面向对象--抽象类 abstract
接口里面的方法都是没有实现的，而类里面的方法都是有实现的
在抽象方法前面添加abstract关键字可以标明这个方法是抽象方法不需要具体实现
抽象类的实现，要实现抽象类中的抽象方法
抽象类不能实例化，只能被继承

面向对象特殊实践
  魔术方法
 __construct(),__destruct()
 __tostring() --对象被当作string使用 echo $obj
 __invoke()   --对象被当成方法调用时，$obj(4)
 __call()    当对象访问不存在的方法名称时;__callStatic() 当对象访问不存在的静态方法名称时
 __call(),__callStatic()这两个方法在php里面也被称为方法的重载(overloading);
 __set() 给不可访问的属性赋值
 __get() 读取不可以访问的属性的值
 __isset()当对不可访问属性调用isset()或empty()时
 __unset()当对不可访问属性调用unset()
 所谓不可访问属性，实际上就是调用某个属性时发现这个属性没有被定义，这个时候不同质操作全触发不同魔术方法
 这几个方法也被称为属性重载的魔术方法










