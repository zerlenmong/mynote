smarty模版引擎

php:增删改查(数据处理)
html:负责页面的呈现

   php如何把数据交给HTML(smarty)

smarty模版引擎(php程序)

 www.smarty.net

 	新建两个文件夹：template //模版目录
 				 template_s //模版的编译文件(编译缓存文件)，提高运行速度
 	使用smarty.class.php呈现页面
 			1.实例化对象 $smarty=new Smarty();
 			2.配置
 			   告诉smarty对象，模版根目录是谁
 			   	$smarty->setTmplateDir(template_dir)
 			   	$smarty->tmplate_dir=template_dir;

 			   	$smarty->setCompileDir(template_s_dir)
 			   	$smarty->compile_dir=tmplate_s_dir;
 传值---
 如果是数组---索引下标 ---{$数组名称[下标]}
 			关联下标----{$数组名称·下标}
 遍历数组---循环标签--内置属性@index ---循环变量值
					     @iteration---循环次数
 						 @total----循环的总次数
 				{foreach $array as $v}
 					{$v.下标}
 				{foreachelse}
 					没有任何记录
 				{/foreach}
 {section name='名称' loop=数组 [step=1]} ---- 遍历默认索引下标
 		{数组[名称].下标}
 {/section}
 内部属性
 		$smarty.section.section名称.index
 		$smarty.section.section名称.iteration
------------------------------------------------
 				{foreach $array as $k=>$v}
 					$k=>{$v.下标}
 				{foreachelse}
 					没有任何记录
 				{/foreach}
 			条件标签-------------------
 				{if}
 					{else}
 				{/if}

 				{if}
 					{elseif}
 				{/if}
 $smarty->assign('',$str);

 变量调节器：一个函数对某个变量值进行操作
 	调用格式
 			{函数的第一个参数|函数名：第二个参数：第三个参数...}
 			php中的函数可以在模版中对变量进行处理

常量
	define('名称',值)
		说明：值只能是基本变量类型---数字，字符串，bool
	$smarty.const.常量名称
预定义变量
	$smarty.get.名称
模版注释标签
	{*注释内容*}

------20140722---------------
//修改定界符
$smarty->left_delimiter=""
$smarty->right_delimiter=""

注册函数
 定义：把主程序中的函数传递给模版
 语法格式：$smarty->registerPlugin('function','在模版上函数名称','主程序中函数的名字')
 	问题：在主程序中有一个函数
 	function fun1($param,$ob){
 		函数体
 		}
 	问题：在模版上如何调用（传值）
 	{函数名称 a=1 b=2 c=3...}

 	function getNews($param){
 		$num=$param['num'];
 		$pdo=new PDO('mysql:host=localhost;dbname=aaa','root','');
 		$pdo->query('set names utf8');
 		$pdos=$pdo->query("select * from shop_product limit {$num}");
 		$pdos->setFetchMode(PDO::FETCH_ASSOC);
 		$arr=$pdos->fetchAll();
 		$content='<ul>';
 		foreach($arr as $v){
 			$content.='<li>'.$v['title'].'</li>'
 		}
 		return $content.'</ul>'
 	$smarty->registerPlugin('function','new','getNews');
 	----------------
 	{News num=10}

注册对象
	把一个对象注册给模版，使得模版中可以直接使用这个对象
	$smarty->registerObject("templateOb",object[,array('方法1'，'方法2'...)])

	模版上使用
	{templateOb->方法名称 参数=值 参数=值 参数=值...}
------------------------------------------------
	注册函数如何接收传参，注册对象的方法就如何接收传参
缓存-把数据或一些内容，临时放到一个文件中
优点：减轻数据库的压力。网站运行效率高

	开启缓存
		$smarty->caching=true;
		or $smarty->setCaching(1|2);
	设置缓存的生命周期
		$smarty->cache_lifetime=100;//秒
	指定缓存文件的存放目录：
		$smarty->setCacheDir(缓存存入目录)
	生成缓存
	清除缓存
		$smarty->clearAllCache();
	局部不缓存
			页面中的某一部分数据，实时更新
			{nocache}
				实时更新的内容
			{/nocache}
	判断页面对应的缓存文件是否生成
	$smarty->isCached('模版文件的名称')



smarty总结
	作用
	配置：
		创建文件夹 template template_c cache
		主程序中
		1、加载smarty
				//设置默认路径
				set_include_path(get_include_path().PATH_SEPARATOR.'class'.PATH_SEPARATOR.ROOT.'libs/'.PATH_SEPARATOR.ROOT.'libs/sysplugins')
				function __autoload($className){
					if(preg_match("/^smarty_/i",$className)){
						require $className.".class.php";
					}else{
						require strtolower($className).".php";
					}
				}
		2、实例化
			new Smarty();
		3、调用对象的属性和方法，进行设置
			$smarty->setTemplateDir()
			$smarty->setCompileDir()
			$smarty->setCacheDir()
			$smarty->caching=true
			$smarty->cache_lifetime=5
			$smarty->left_delimiter="{{"
			$smarty->right_delimiter="}}"

			给模版传递值
			$smarty->assign()
			显示模版
			$smarty->display()
			获取模版的运行结果
			$content=$smarty->fetch(path);

			$smarty->registerPilugin()
			$smarty->registerObject()
			$smarty->clearAllCache()
			$smarty->clearCache(path)
			$smarty->isCached(path)

			1、模版上如何接收传递的变量，并进行处理
			{$变量名称}
			循环
			{foreach $arr as $v}
			{$v.title}{$v@index|iteration|total|last|first}
			{foreachelse}
			{/foreach}
			条件
			{if}
			{else}
			{/if}
			变量调节器(函数)
			{第一个参数|函数名:第二个参数:第三个参数}
			{$str|truncate:0:30:'...'}
			注册函数的调用
			{函数名称 参数=值 ...}
			注册对象的调用
			{对象名称->方法名 参数=值 ...}
			页面拆分
			{include file='path' 名=值 ...}


静态化---减轻数据库的压力
		定义：把php动态页面转化成静态页面。

		1、拼字符串
		2、使用缓冲区获取页面运行结果
			缓冲区：在内在开辟一块空间，用来临时存放PHP程序运行的结果
			ob_start()---开启
			内容
			ob_get_contents()---获取缓冲区的内容

			ob_end_clearn()--关闭并且清除缓冲区的内容
		3、$smarty->fetch(path);
一次生成所有文章静态页面？？？(7000条)
程序执行生成一条，自动启动下一次请求(js)
where  id>$startid limit 1
location.replace("?id=$startid")



-----------20140725------------------------
缓存：哪类数据适合缓存：更新频率高，访问频率高
 
文件缓存
内存缓存(更新=访问)

如何实现缓存
	1.php程序把分类从数据库表中获取出来，生成xml文件 ---添加文章中的所属分类和所属栏目



	2.当数据库表读取结果，进行缓存时。

	什么时候缓存
			执行查询时，当没有缓存文件存在或缓存文件过期(filemtime(path)---获取文件最后一次修改时间)，进行缓存否则直接返回缓存文件的内容
	缓存在哪里
			$sql=''
			$key=md5('$sql');

			$key.txt
			$content=serialize($arr)
			fwrite('cache/$key.txt',$content)
	生命周期
			在配置文件中加一个配置项
			define('CACHE_LIFETIME',100);

内存缓存---文章点击数
	将缓存数据放在内存中
	memcached.exe----安装只能通过命令安装---memcached.exe -d install----启动服务--memcached.ext -d start------停止服务：memcached.ext -d stop------卸载----memcached.exe -d uninstall


内存操作类文件
下载php的扩展包--php_memcache.dll

new memcache(
)
内存操作类：
	方法
		$mob->add(名称,值,$exp=100);
		$mob->get(名称);
		$mob->replace(名称,值,$exp=0);
		$mob->delete(名称,$time=0);---过多长时间之后执行删除


		文章点击数，内存缓存

-------------2014-07-28-----------------------------------
伪静态(apache)--假静态，没有静态文件存在，只存在静态的地址
apache服务器的服务器端跳转(mod_rewrite .so)
	1、引入文件 mod_rewrite.so apache配置文件中
		loadModule Rewrite_Module modules/mod_rewrite.so
	2、修改网站根目录的权限
		<Directory>
			AllowOverride All
		</Directory>
	3、在网站内放一个文件(文本文件)
		.htaccess ---用来存放url跳转规则
	4、规则书写
		在(.htaccess)文件中写入
		RewriteEngine On ----开启跳转
		#--注释
		RewriteRule --跳转规则---正则表达式
		RewriteRule list_(\d_).html a.php?id=$1---传参---反向引用
		RewriteBase -----设置全路径